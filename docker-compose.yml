version: "3.8"

services:
  db:
    image: postgres:16.1-alpine
    container_name: "api-demo-db"
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=api_demo_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - api_demo_app
    volumes:
      - database_postgres:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  django-drf:
    build:
      context: .
      dockerfile: ./django_drf/Dockerfile
    container_name: "api-demo-django-drf"
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - api_demo_app

  django-ninja:
    build:
      context: .
      dockerfile: ./django_ninja/Dockerfile
    container_name: "api-demo-django-ninja"
    ports:
      - "8001:8001"
    depends_on:
      - db
    networks:
      - api_demo_app

  fastapi:
    build:
      context: .
      dockerfile: ./fast_api/Dockerfile
    container_name: "api-demo-fastapi"
    ports:
      - "8002:8002"
    depends_on:
      - db
    networks:
      - api_demo_app

  go-sqlc-mux:
    build:
      context: .
      dockerfile: ./go_sqlc_mux/Dockerfile
    container_name: "api-demo-go-sqlc-mux"
    ports:
      - "8003:8003"
    depends_on:
      - db
    networks:
      - api_demo_app

volumes:
  database_postgres:

networks:
  api_demo_app:
    driver: bridge
